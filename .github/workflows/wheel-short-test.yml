name: 'CI Tests: Python'

on:
  push:
    tags-ignore:
      - '**'
    branches:
      - '**'

env:
  PACKAGE_VERSION: "1.2.6"
  PACKAGE_NAME: qpalm

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        config: [relwithdebinfo, debug]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Conan
        uses: ./.github/workflows/setup-conan
        with:
          python-version: '3.12'
          cache-key: build-sdist

      - name: Build Wheel package
        run: ./scripts/ci/build-linux-hardened.sh . dist ${{ matrix.config }}

      - name: Upload Wheel
        uses: actions/upload-artifact@v4
        with:
          name: hardened-wheels-${{ matrix.config }}
          path: dist/*.whl
          retention-days: 1

      - run: conan cache clean

  test-linux:
    needs: [build-linux]
    runs-on: ubuntu-latest
    container: python:3.12-trixie
    strategy:
      matrix:
        config: [relwithdebinfo, debug]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Download wheels
        uses: actions/download-artifact@v4
        with:
          name: hardened-wheels-${{ matrix.config }}
          path: dist

      - name: Install Valgrind, libgfortran
        run: apt-get update && apt-get install -y valgrind libgfortran5 --no-install-recommends

      - name: Install test dependencies
        run: python3 -m pip install -U pip cmake ninja twine
      - name: Install
        run: python3 -m pip install --find-links=dist "${PACKAGE_NAME}[test]==${PACKAGE_VERSION}"

      - name: Test (${{ matrix.config }})
        run: python3 -m pytest -rP
        env:
          QPALM_PYTHON_DEBUG: ${{ matrix.config == 'debug' }}

      - name: Test (Valgrind, ${{ matrix.config }})
        run: valgrind --gen-suppressions=all --suppressions=scripts/valgrind/python.supp --error-exitcode=234 python3 -m pytest -rP
        env:
          QPALM_PYTHON_DEBUG: ${{ matrix.config == 'debug' }}

      - name: Check Wheel metadata
        run: python -m twine check dist/*.whl

  build-macos-windows:
    name: Build (${{ matrix.cibw-arch }}-${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - {os: windows-latest, cibw-arch: AMD64, arch: amd64}
          - {os: macos-latest, cibw-arch: arm64}
      fail-fast: false
    env:
      SCCACHE_CACHE_MULTIARCH: "1"
      CIBW_ARCHS: ${{ matrix.cibw-arch }}
      CIBW_ENABLE: 'pypy'
      CIBW_TEST_SKIP: 'pp* *-win32'
      CIBW_BUILD: 'cp311-* pp310-*'
      PYTHONUTF8: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Conan and sccache
        uses: ./.github/workflows/setup-conan
        with:
          python-version: "3.12"
          cache-key: cibuildwheel-short-${{ matrix.cibw-arch }}

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel~=3.1.3

      - name: Build wheels
        if: runner.os == 'Windows'
        shell: cmd
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" ${{ matrix.arch }}
          cibuildwheel . --output-dir dist

      - name: Build wheels
        if: runner.os != 'Windows'
        run: cibuildwheel . --output-dir dist

      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: wheels-short-${{ matrix.os }}-${{ matrix.cibw-arch }}
          path: ./dist/*.whl

      - run: conan cache clean
